// Generated by view binder compiler. Do not edit!
package com.example.retofinal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.retofinal.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button button;

  @NonNull
  public final EditText editNotaExamen;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final Spinner spinnerRetoDos;

  @NonNull
  public final Spinner spinnerRetoTres;

  @NonNull
  public final Spinner spinnerRetoUno;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView textView2;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull Button button,
      @NonNull EditText editNotaExamen, @NonNull ConstraintLayout main,
      @NonNull Spinner spinnerRetoDos, @NonNull Spinner spinnerRetoTres,
      @NonNull Spinner spinnerRetoUno, @NonNull TextView textView, @NonNull TextView textView2) {
    this.rootView = rootView;
    this.button = button;
    this.editNotaExamen = editNotaExamen;
    this.main = main;
    this.spinnerRetoDos = spinnerRetoDos;
    this.spinnerRetoTres = spinnerRetoTres;
    this.spinnerRetoUno = spinnerRetoUno;
    this.textView = textView;
    this.textView2 = textView2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button;
      Button button = ViewBindings.findChildViewById(rootView, id);
      if (button == null) {
        break missingId;
      }

      id = R.id.editNotaExamen;
      EditText editNotaExamen = ViewBindings.findChildViewById(rootView, id);
      if (editNotaExamen == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.spinnerRetoDos;
      Spinner spinnerRetoDos = ViewBindings.findChildViewById(rootView, id);
      if (spinnerRetoDos == null) {
        break missingId;
      }

      id = R.id.spinnerRetoTres;
      Spinner spinnerRetoTres = ViewBindings.findChildViewById(rootView, id);
      if (spinnerRetoTres == null) {
        break missingId;
      }

      id = R.id.spinnerRetoUno;
      Spinner spinnerRetoUno = ViewBindings.findChildViewById(rootView, id);
      if (spinnerRetoUno == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, button, editNotaExamen, main,
          spinnerRetoDos, spinnerRetoTres, spinnerRetoUno, textView, textView2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
